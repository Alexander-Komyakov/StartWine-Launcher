#!/usr/bin/env python3

import os
import sys
import gi

gi.require_version('Gtk', '3.0')
gi.require_version('Gdk', '3.0')
gi.require_version('Vte', '2.91')
from gi.repository import Gdk, GdkPixbuf, Gio, GLib, GObject, Gtk, Vte, Pango
from pathlib import Path
import subprocess
from subprocess import *
import threading
import traceback
import logging
import argparse

link = f"{sys.argv[0]}/"
path_link = Path(link).parent
sw_scripts = f"{path_link}/"
sw_path = Path(sw_scripts).parent.parent
print(sw_path)
sw_application = f"{Path.home()}/.local/share/applications"

class TheWindow(Gtk.Window):

    def __init__(self):

        Gtk.Window.__init__(self, title="StartWine")
        self.set_border_width(8)
        self.set_default_size(800, 450)
        self.terminal = Vte.Terminal()
        self.terminal.spawn_async(
            Vte.PtyFlags.DEFAULT,
            os.environ['HOME'],
            ['/bin/bash'],
            None,
            GLib.SpawnFlags.DEFAULT,
            None, None,
            -1,
            None,
            None,
            None,
        )
        spacer = Gtk.Label.new("               ")
        self.button = Gtk.Button(label="    INSTALL    ")
        self.button.set_hexpand(True)
        self.button3 = Gtk.Button(label="    UNINSTALL    ")
        self.button3.set_hexpand(True)
        self.button2 = Gtk.Button(label="    EXIT    ")
        self.button2.set_hexpand(True)
        self.command = 'StartWine/data/scripts/setup\n'
        self.button.connect("clicked", self.install)
        self.button3.connect("clicked" , self.uninstall)
        self.button2.connect("clicked", self.exit)

        box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=16)
        box2 = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL)
        box1 = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL, spacing=400)
        box3 = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL, spacing=8)
        box1.pack_start(self.button, False, True, 0)
        box1.pack_start(self.button3, False, True, 0)
        box1.pack_start(self.button2, False, True, 0)
        box.pack_start(box3, False, True, 0)
        box.pack_start(box1, False, True, 0)
        box.pack_start(box2, False, True, 0)
        scroller = Gtk.ScrolledWindow()
        scroller.set_hexpand(True)
        scroller.set_vexpand(True)
        scroller.add(self.terminal)
        box2.pack_start(scroller, False, True, 2)
        self.add(box)

    def install(self, clicker):

        length = len(self.command)
        self.terminal.feed_child(self.command.encode("utf-8"))

    def uninstall(self, clicker):

        cmd_mv_games = f"mv {sw_path}/Games {Path.home()}/Games_tmp"
        subprocess.call(cmd_mv_games, shell=True)

        cmd_mv_pfx = f"mv {sw_path}/data/pfx_backup {Path.home()}/pfx_backup"
        subprocess.call(cmd_mv_pfx, shell=True)

        cmd_rm = f"rm -fr {sw_path}"
        subprocess.call(cmd_rm, shell=True)

        cmd_rm_2 = f"rm -f {sw_application}/StartWine.desktop"
        subprocess.call(cmd_rm_2, shell=True)

        cmd_clear = f"clear\n"

        self.terminal.feed_child(cmd_clear.encode("utf-8"))

        cmd_echo = f"clear && echo '#####################################' && echo '#  Uninstall StartWine successful!  #' && echo '#####################################'\n"

        self.terminal.feed_child(cmd_echo.encode("utf-8"))

    def exit(self, button):

        print("Closing application")
        Gtk.main_quit()

win = TheWindow()
win.connect("delete-event", Gtk.main_quit)
win.show_all()
Gtk.main()
